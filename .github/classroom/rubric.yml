criteria:
  - id: linting
    description: Code should pass linting checks without errors or warnings.
    points: 10
    command: npm run lint

  - id: build
    description: The application should build successfully without errors.
    points: 20
    command: npm run build

  - id: unit-tests
    description: Unit tests should pass successfully.
    points: 20
    command: npm run test

  - id: health-check
    description: The health check endpoint should return a 200 status.
    points: 20
    setup: |
      docker-compose up -d
      sleep 20
    command: curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/health
    pass_value: "200"

  - id: crud-create
    description: The POST /user endpoint should create a new user.
    points: 15
    setup: |
      curl -X POST http://localhost:3000/user \
        -H "Content-Type: application/json" \
        -d '{"name": "Test User", "email": "test@example.com"}'
    command: curl -s -X GET http://localhost:3000/user | grep -c "test@example.com"
    pass_value: "1"

  - id: crud-read
    description: The GET /user endpoint should return all users.
    points: 15
    setup: |
      curl -X POST http://localhost:3000/user \
        -H "Content-Type: application/json" \
        -d '{"name": "Read User", "email": "read@example.com"}'
    command: curl -s -X GET http://localhost:3000/user | grep -c "read@example.com"
    pass_value: "1"